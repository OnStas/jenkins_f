def Branch
String repoUrl = "https://github.com/OnStas/jenkins_test.git"
pipeline {

    agent { label 'docker-slave-ssh' }
    stages {
        stage('Clone') {
              steps {
                //git branch: 'main',
                  //  url: 'https://github.com/OnStas/jenkins_test.git'
                script {
                    // GET
                    
                    def get = new URL("https://api.github.com/repos/OnStas/jenkins_test/pulls").openConnection();
                    def getRC = get.getResponseCode();
                    //println(getRC);
                    if(getRC.equals(200)) {
                    def html =get.getInputStream().getText();
                    Branch = html.split("ref\":")[1].split(',')[0];
                    println(Branch);
                    //git clone 'https://github.com/OnStas/jenkins_test.git'
                    //cd jenkins_test
                   // git branch: Branch, url:  
                    }
                   // ["git", "clone", "https://github.com/OnStas/jenkins_test.git", "test"].execute()  
                    pwd
                }
                sh 'git clone     https/://github.com/OnStas/jenkins_test.git test'
               //echo PR-"${Branch}"
              // git branch: 'PR-13', url: 'https://github.com/OnStas/jenkins_test.git'      
               sh 'printenv'
              
            }        
        }
        stage('Build') {
            steps {
                sh 'cd test'
                sh 'chmod +x build.sh'
                sh '.build.sh 2>&1 | tee artifact.txt'
            }
        }
        stage('Test') {
            steps {
                sh 'cd test'
                sh 'chmod +x test.sh'
                sh 'sh test.sh 2>&1 | tee test_result.txt' 
            }
        }                      
    }
    post {
        always {
            archiveArtifacts(artifacts: '**/jenkins_test/artifact.txt', followSymlinks: false)
        }
        failure {
            archiveArtifacts(artifacts: '**/jenkins_test/test_result.txt', followSymlinks: false)
        }
    }
}
