
node("docker-jnlp-slave") {
def PR_ID
    stage("Clone") {
        git branch: 'main',
                    url: 'https://github.com/OnStas/jenkins_test.git'
                    
        def get = new URL("https://api.github.com/repos/OnStas/jenkins_test/pulls").openConnection();
        def getRC = get.getResponseCode();
        if(getRC.equals(200)) {
        def html =get.getInputStream().getText();
        PR_ID = html.split("number\":")[1].split(',')[0];
        println(PR_ID);
        } 
        //echo ${Branch}
       // echo "${PR_ID}"
        git fetch origin pull/$PR_ID/head:test_br
       // sh "git fetch origin pull/$PR_ID/head:test_br"
        sh 'git checkout test_br'
        sh 'printenv'      
    }
    
    stage("Build") {
        sh 'chmod +x build.sh'
        sh './build.sh 2>&1 | tee artifact.txt'
    }
    
    try {
    stage('Test') {
        sh 'chmod +x test.sh'
        sh './test.sh 2>&1 | tee test_result.txt' 
        }
        echo 'Test successful'
    } catch (err) {
        archiveArtifacts(artifacts: '**/test_result.txt', followSymlinks: false)
        echo "Failed: ${err}"
    } finally {
       archiveArtifacts(artifacts: '**/artifact.txt', followSymlinks: false)
    }
}
